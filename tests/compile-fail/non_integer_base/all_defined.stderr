error[E0277]: the trait bound `MyInt: Bits` is not satisfied
   --> tests/compile-fail/non_integer_base/all_defined.rs:116:22
    |
116 |     struct Flags128: MyInt {
    |                      ^^^^^ the trait `Bits` is not implemented for `MyInt`
    |
    = help: the following other types implement trait `Bits`:
              i128
              i16
              i32
              i64
              i8
              u128
              u16
              u32
            and 2 others
note: required by a bound in `bitflags::BitFlags::Bits`
   --> src/bitflags_trait.rs
    |
    |     type Bits: Bits;
    |                ^^^^ required by this bound in `bitflags::BitFlags::Bits`

error[E0277]: the trait bound `MyInt: Bits` is not satisfied
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ the trait `Bits` is not implemented for `MyInt`
    |
    = help: the following other types implement trait `Bits`:
              i128
              i16
              i32
              i64
              i8
              u128
              u16
              u32
            and 2 others
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Bits` is not satisfied
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ the trait `Bits` is not implemented for `MyInt`
    |
    = help: the following other types implement trait `Bits`:
              i128
              i16
              i32
              i64
              i8
              u128
              u16
              u32
            and 2 others
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Bits` is not satisfied
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ the trait `Bits` is not implemented for `MyInt`
    |
    = help: the following other types implement trait `Bits`:
              i128
              i16
              i32
              i64
              i8
              u128
              u16
              u32
            and 2 others
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_` in const contexts
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ no implementation for `MyInt == _`
    |
    = help: the trait `~const PartialEq<_>` is not implemented for `MyInt`
note: the trait `PartialEq<_>` is implemented for `MyInt`, but that implementation is not `const`
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_` in const contexts
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ no implementation for `MyInt == _`
    |
    = help: the trait `~const PartialEq<_>` is not implemented for `MyInt`
note: the trait `PartialEq<_>` is implemented for `MyInt`, but that implementation is not `const`
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Bits` is not satisfied
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ the trait `Bits` is not implemented for `MyInt`
    |
    = help: the following other types implement trait `Bits`:
              i128
              i16
              i32
              i64
              i8
              u128
              u16
              u32
            and 2 others
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Bits` is not satisfied
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ the trait `Bits` is not implemented for `MyInt`
    |
    = help: the following other types implement trait `Bits`:
              i128
              i16
              i32
              i64
              i8
              u128
              u16
              u32
            and 2 others
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_` in const contexts
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ no implementation for `MyInt == _`
    |
    = help: the trait `~const PartialEq<_>` is not implemented for `MyInt`
note: the trait `PartialEq<_>` is implemented for `MyInt`, but that implementation is not `const`
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_` in const contexts
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ no implementation for `MyInt == _`
    |
    = help: the trait `~const PartialEq<_>` is not implemented for `MyInt`
note: the trait `PartialEq<_>` is implemented for `MyInt`, but that implementation is not `const`
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_` in const contexts
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ no implementation for `MyInt == _`
    |
    = help: the trait `~const PartialEq<_>` is not implemented for `MyInt`
note: the trait `PartialEq<_>` is implemented for `MyInt`, but that implementation is not `const`
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_` in const contexts
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^ no implementation for `MyInt == _`
    |
    = help: the trait `~const PartialEq<_>` is not implemented for `MyInt`
note: the trait `PartialEq<_>` is implemented for `MyInt`, but that implementation is not `const`
   --> tests/compile-fail/non_integer_base/all_defined.rs:115:1
    |
115 | / bitflags! {
116 | |     struct Flags128: MyInt {
117 | |         const A = MyInt(0b0000_0001u8);
118 | |         const B = MyInt(0b0000_0010u8);
119 | |         const C = MyInt(0b0000_0100u8);
120 | |     }
121 | | }
    | |_^
    = note: this error originates in the macro `__impl_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)
