error[E0369]: binary operation `==` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `MyInt`
   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: binary operation `!=` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `MyInt`
   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: std::cmp::Eq` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `std::cmp::Eq` is not implemented for `MyInt`
    |
    = note: this error originates in the derive macro `Eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `MyInt` with `_`
    --> $DIR/missing_bitops.rs:6:1
     |
6    | / bitflags! {
7    | |     struct Flags128: MyInt {
8    | |         const A = MyInt(0b0000_0001);
9    | |         const B = MyInt(0b0000_0010);
10   | |         const C = MyInt(0b0000_0100);
11   | |     }
12   | | }
     | |_^ no implementation for `MyInt < _` and `MyInt > _`
     |
     = help: the trait `PartialOrd<_>` is not implemented for `MyInt`
note: required by `std::cmp::PartialOrd::partial_cmp`
     = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Ord` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `Ord` is not implemented for `MyInt`
    |
note: required by `std::cmp::Ord::cmp`
    = note: this error originates in the derive macro `Ord` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Hash` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `Hash` is not implemented for `MyInt`
    |
    = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^ expected struct `MyInt`, found integer
   |
   = note: this error originates in the macro `__impl_all_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0600]: cannot apply unary operator `!` to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^ cannot apply unary operator `!`
   |
   = note: an implementation of `std::ops::Not` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: binary operation `==` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | | ^
   | | |
   | |_MyInt
   |   {integer}
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: binary operation `!=` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | | ^
   | | |
   | |_MyInt
   |   {integer}
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: no implementation for `MyInt & MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  |   bitflags! {
   |  _^
   | |_|
   | |
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | | ^
   | |_|
   | |_MyInt
   |   MyInt
   |
   = note: an implementation of `std::ops::BitAnd` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Binary` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `Binary` is not implemented for `MyInt`
    |
note: required by `std::fmt::Binary::fmt`
    = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: Octal` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `Octal` is not implemented for `MyInt`
    |
note: required by `std::fmt::Octal::fmt`
    = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: LowerHex` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `LowerHex` is not implemented for `MyInt`
    |
note: required by `std::fmt::LowerHex::fmt`
    = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `MyInt: UpperHex` is not satisfied
   --> $DIR/missing_bitops.rs:6:1
    |
6   | / bitflags! {
7   | |     struct Flags128: MyInt {
8   | |         const A = MyInt(0b0000_0001);
9   | |         const B = MyInt(0b0000_0010);
10  | |         const C = MyInt(0b0000_0100);
11  | |     }
12  | | }
    | |_^ the trait `UpperHex` is not implemented for `MyInt`
    |
note: required by `std::fmt::UpperHex::fmt`
    = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^ expected struct `MyInt`, found integer
   |
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: no implementation for `MyInt | MyInt`
   --> $DIR/lib.rs:394:52
    |
394 |         Self { bits: $(<Self as __BitFlags>::$Flag)|+ }
    |                                                    ^
    |
    = note: an implementation of `std::ops::BitOr` might be missing for `MyInt`

error[E0369]: binary operation `==` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  |   bitflags! {
   |  _^
   | |_|
   | |
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | | ^
   | |_|
   | |_MyInt
   |   MyInt
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: no implementation for `MyInt | MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  |   bitflags! {
   |  _^
   | |_|
   | |
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | | ^
   | |_|
   | |_MyInt
   |   MyInt
   |
   = note: an implementation of `std::ops::BitOr` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0368]: binary assignment operation `|=` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^ cannot use `|=` on type `MyInt`
   |
   = note: an implementation of `std::ops::BitOrAssign` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0368]: binary assignment operation `^=` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^ cannot use `^=` on type `MyInt`
   |
   = note: an implementation of `std::ops::BitXorAssign` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0369]: no implementation for `MyInt ^ MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  |   bitflags! {
   |  _^
   | |_|
   | |
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | | ^
   | |_|
   | |_MyInt
   |   MyInt
   |
   = note: an implementation of `std::ops::BitXor` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0368]: binary assignment operation `&=` cannot be applied to type `MyInt`
  --> $DIR/missing_bitops.rs:6:1
   |
6  | / bitflags! {
7  | |     struct Flags128: MyInt {
8  | |         const A = MyInt(0b0000_0001);
9  | |         const B = MyInt(0b0000_0010);
10 | |         const C = MyInt(0b0000_0100);
11 | |     }
12 | | }
   | |_^ cannot use `&=` on type `MyInt`
   |
   = note: an implementation of `std::ops::BitAndAssign` might be missing for `MyInt`
   = note: this error originates in the macro `__impl_bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)
